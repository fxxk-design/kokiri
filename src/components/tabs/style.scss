.TabNav {
  min-width: 88px;
  padding: 0 14px;
  border: var($cp--tabs-nav-border-width, $ss--tabs-nav-border-width) solid
    var($cp--tabs-nav-border-color, $ss--tabs-nav-border-color);
  color: #999;
  text-align: center;

  &-close {
    margin-left: 5px;
  }

  &:hover,
  &-close:hover {
    cursor: pointer;
  }

  &.is-active {
    color: var($cp--tabs-nav-active-color, $ss--tabs-nav-active-color);
    border: var($cp--tabs-nav-active-border-width, $ss--tabs-nav-active-border-width) solid
      var($cp--tabs-nav-active-border-color, $ss--tabs-nav-active-border-color);
    border-bottom-color: var($cp--tabs-content-bg, $ss--tabs-content-bg);
    border-radius: var($cp--tabs-nav-border-radius, $ss--tabs-nav-border-radius)
      var($cp--tabs-nav-border-radius, $ss--tabs-nav-border-radius) 0 0;
    box-shadow: var($cp--tabs-nav-active-box-shadow, $ss--tabs-nav-active-box-shadow);
    background-color: $ss--white;

    &:hover {
      cursor: default;
    }
  }

  &.is-disabled {
    cursor: not-allowed !important;
  }

  &:not(.is-disabled):hover {
    color: var($cp--tabs-nav-hover-color, $ss--tabs-nav-hover-color);
  }

  &:not(.is-active) + .TabNav:not(.is-active) {
    position: relative;

    &:before {
      content: '\0020';
      position: absolute;
      top: 50%;
      left: 0;
      width: 1px;
      height: 18px;
      background-color: #dcdfe5;
      transform: translateY(-50%);
    }
  }

  &--add {
    color: var($cp--tabs-nav-active-color, $ss--tabs-nav-active-color) !important;
  }
}

.TabBar {
  $btn-width: 32px;

  position: relative;
  z-index: 1;
  height: var($cp--tabs-nav-height, $ss--tabs-nav-height);
  font-size: $ss--font-size-base;
  line-height: var($cp--tabs-nav-height, $ss--tabs-nav-height);
  border-radius: var($cp--tabs-nav-border-radius, $ss--tabs-nav-border-radius)
    var($cp--tabs-nav-border-radius, $ss--tabs-nav-border-radius) 0 0;
  background-color: #f2f2f2;

  &-button {
    display: none;
    position: absolute;
    top: 0;
    bottom: 0;
    width: $btn-width;
    text-align: center;
    cursor: pointer;
    color: rgba(51, 51, 51, 0.73);

    &--prev {
      left: 0;
    }

    &--next {
      right: 0;
    }

    &:hover {
      color: inherit;
    }

    &.is-disabled {
      color: rgba(51, 51, 51, 0.25) !important;
      cursor: not-allowed;
    }
  }

  &-content {
    overflow: hidden;
    white-space: nowrap;
  }

  &-body,
  &-draggable {
    display: flex;
  }

  &-body {
    transition: transform 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
  }

  &--stretch &-draggable,
  &--stretch .TabNav {
    min-width: 0;
    flex-grow: 1;
  }

  &.is-scrollable {
    padding: {
      right: $btn-width;
      left: $btn-width;
    }
  }

  &.is-scrollable &-button {
    display: block;
  }
}

@include component-rules($__tabs-component-name) {
  border-radius: var($cp--tabs-nav-border-radius, $ss--tabs-nav-border-radius)
    var($cp--tabs-nav-border-radius, $ss--tabs-nav-border-radius)
    var($cp--tabs-content-border-radius, $ss--tabs-content-border-radius)
    var($cp--tabs-content-border-radius, $ss--tabs-content-border-radius);
  box-shadow: var($cp--tabs-box-shadow, $ss--tabs-box-shadow);

  &-content {
    position: relative;
    padding: 12px 16px;
    border: var($cp--tabs-content-border-width, $ss--tabs-content-border-width) solid
      var($cp--tabs-content-border-color, $ss--tabs-content-border-color);
    border-radius: 0 0 var($cp--tabs-content-border-radius, $ss--tabs-content-border-radius)
      var($cp--tabs-content-border-radius, $ss--tabs-content-border-radius);
    background-color: $ss--white;
  }

  &--right,
  &--bottom,
  &--left {
    display: flex;
  }

  &--right .TabBar,
  &--left .TabBar {
    flex-direction: column;
  }

  &--right &-content,
  &--left &-content {
    flex-grow: 1;
  }

  &--right {
    flex-direction: row-reverse;
  }

  &--bottom {
    flex-direction: column-reverse;
  }

  &--fixed {
    padding-top: var($cp--tabs-nav-height, $ss--tabs-nav-height);
  }

  &--fixed,
  &--fixed &-content,
  &--fixed &-section,
  &--fixed .TabPane {
    height: 100%;
  }

  &--fixed .TabPane {
    overflow: auto;
  }

  &--fixed &-navs {
    margin-top: calc(var(#{$cp--tabs-nav-height}, #{$ss--tabs-nav-height}) * -1);
  }
}
